name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: lolmeida/peah-db

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-tag: ${{ steps.meta.outputs.tags }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: |
        ./mvnw clean test

    - name: Docker login
      run: |
        docker login ${{ env.REGISTRY }} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        ./mvnw clean package -Dquarkus.container-image.build=true

  deploy:
    needs: build-test-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate SSH secrets
      run: |
        if [ -z "${{ secrets.VPS_HOST }}" ] || [ -z "${{ secrets.VPS_USER }}" ] || [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
          echo "❌ Missing required SSH secrets: VPS_HOST, VPS_USER, SSH_PRIVATE_KEY"
          exit 1
        fi
        echo "✅ All SSH secrets are configured"
    
    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        chmod 700 ~/.ssh
        
        # Add host to known_hosts
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        
        # Create SSH config
        cat > ~/.ssh/config << EOF
        Host ${{ secrets.VPS_HOST }}
            HostName ${{ secrets.VPS_HOST }}
            User ${{ secrets.VPS_USER }}
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
            UserKnownHostsFile ~/.ssh/known_hosts
        EOF
        chmod 600 ~/.ssh/config
        
        echo "✅ SSH key setup completed"
    
    - name: Deploy to VPS
      run: |
        # Transfer deployment script to VPS
        scp deploy-vps.sh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/
        
        # Copy k8s directory to VPS
        scp -r k8s ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/peah-db-k8s/
        
        # Execute deployment
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd /tmp && chmod +x deploy-vps.sh && ./deploy-vps.sh ${{ github.sha }}"
        
        # Clean up
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "rm -rf /tmp/deploy-vps.sh /tmp/peah-db-k8s"