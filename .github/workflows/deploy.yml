name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: 'Image tag to deploy'
        required: false
        default: 'latest'
        type: string

env:
  NAMESPACE: lolmeida

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Validate SSH secrets
      run: |
        if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
          echo "❌ Missing required SSH secret: SSH_PRIVATE_KEY"
          exit 1
        fi
        echo "✅ SSH secret is configured"
    
    - name: Setup SSH key and config
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        chmod 700 ~/.ssh
        
        # Add host to known_hosts
        ssh-keyscan -H 31.97.53.64 >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        
        # Create SSH config similar to local config
        cat > ~/.ssh/config << EOF
        Host n8n
            HostName 31.97.53.64
            User root
            Port 22
            IdentityFile ~/.ssh/id_ed25519
            ServerAliveInterval 60
            ServerAliveCountMax 3
            StrictHostKeyChecking no
            UserKnownHostsFile ~/.ssh/known_hosts
        EOF
        chmod 600 ~/.ssh/config
        
        echo "✅ SSH key and config setup completed"
    
    - name: Deploy to VPS
      env:
        IMAGE_TAG: ${{ github.event.inputs.image-tag }}
      run: |
        echo "🚀 Deploying peah.db with image tag: ${IMAGE_TAG}"
        
        # Execute deployment on VPS (similar to deploy.sh)
        ssh n8n << EOF
          echo "📦 Updating Helm chart..."
          cd /tmp
          rm -rf peah-db-helm
          git clone https://github.com/lolmeida/peah.db.git peah-db-helm
          cd peah-db-helm/k8s
          
          echo "🔧 Running Helm upgrade..."
          microk8s helm3 upgrade --install peah-db . \
            --namespace ${{ env.NAMESPACE }} \
            --create-namespace \
            --set image.tag=${IMAGE_TAG} \
            --wait --timeout=300s
          
          echo "✅ Checking deployment status..."
          microk8s kubectl get pods -n ${{ env.NAMESPACE }} -l app.kubernetes.io/name=k8s
          microk8s kubectl rollout status deployment/peah-db-k8s -n ${{ env.NAMESPACE }} --timeout=300s
          
          echo "🏥 Testing health endpoint..."
          sleep 10
          curl -f https://peah-db.lolmeida.com/q/health && echo -e "\n✨ Deployment successful!"
        EOF 