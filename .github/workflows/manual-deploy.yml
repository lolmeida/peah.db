name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag to deploy'
        required: true
        default: 'latest'
        type: string

env:
  IMAGE_NAME: lolmeida/peah-db

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.33.2'
    
    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: 'v3.15.4'
        
    - name: Setup SSH connection
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
        # Test if we can connect to the VPS
        echo "Testing basic SSH connectivity..."
        ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "uname -a" || exit 1
        
    - name: Setup kubeconfig via SSH tunnel
      run: |
        # Check if microk8s is running on VPS
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "microk8s status --wait-ready"
        
        # Start SSH tunnel for k8s API
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -L 16443:localhost:16443 -N -f ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}
        sleep 5
        
        # Setup kubeconfig
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        kubectl config set-cluster microk8s-cluster --server=https://localhost:16443
        
        # Test connection
        kubectl cluster-info
        
    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install peah-db ./k8s \
          --namespace lolmeida \
          --create-namespace \
          --set image.tag=${{ github.event.inputs.image_tag }} \
          --wait --timeout=300s
          
    - name: Verify deployment
      run: |
        kubectl get pods -n lolmeida -l app.kubernetes.io/name=k8s
        kubectl rollout status deployment/peah-db-k8s -n lolmeida --timeout=300s
        
    - name: Test health endpoint
      run: |
        sleep 30
        curl -f https://peah-db.lolmeida.com/q/health || exit 1