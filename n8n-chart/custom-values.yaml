# Custom values for n8n deployment
# Domain: n8n.lolmeida.com

global:
  timezone: "Europe/Lisbon"
  namespace: "lolmeida"

n8n:
  enabled: true
  auth:
    enabled: true
    username: "admin"
    password: "n8n-changeme123"  # Change this!
  config:
    domain: "n8n.lolmeida.com"
    protocol: "https"
    webhookUrl: "https://n8n.lolmeida.com/"
    editorBaseUrl: "https://n8n.lolmeida.com/"



redis:
  enabled: true
  auth:
    password: "redis-changeme123"  # Change this!

mysql:
  enabled: true
  auth:
    rootPassword: "mysql-root-changeme123"
    username: "n8n"
    password: "mysql-n8n-changeme123"
    database: "n8n"

postgresql:
  enabled: true
  auth:
    postgresPassword: "postgres-changeme123"
    username: "n8n"
    password: "postgres-n8n-changeme123"
    database: "n8n"

# Monitoring Stack
monitoring:
  grafana:
    enabled: true
    createConfigMap: true
    auth:
      adminUser: "admin"
      adminPassword: "grafana-changeme123"
    config:
      rootUrl: "https://grafana.lolmeida.com"
  prometheus:
    enabled: true
    createConfigMap: true
    createServiceAccount: true
    createClusterRole: true



# Centralized Ingress Configuration
ingress:
  n8n:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: n8n.lolmeida.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: n8n-tls
        hosts:
          - n8n.lolmeida.com
  monitoring:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: grafana.lolmeida.com
        paths:
          - path: /
            pathType: Prefix
            service: grafana
      - host: prometheus.lolmeida.com
        paths:
          - path: /
            pathType: Prefix
            service: prometheus
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.lolmeida.com
      - secretName: prometheus-tls
        hosts:
          - prometheus.lolmeida.com

# Centralized Deployments Configuration
deployments:
  n8n:
    enabled: true
    replicaCount: 1
    image:
      repository: n8nio/n8n
      tag: "latest"
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: "512Mi"
        cpu: "200m"
      requests:
        memory: "256Mi"
        cpu: "50m"
  mysql:
    enabled: true
    replicaCount: 1
    image:
      repository: mysql
      tag: "8.0"
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: "512Mi"
        cpu: "200m"
      requests:
        memory: "256Mi"
        cpu: "50m"
  postgresql:
    enabled: true
    replicaCount: 1
    image:
      repository: postgres
      tag: "14"
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: "512Mi"
        cpu: "200m"
      requests:
        memory: "256Mi"
        cpu: "50m"
  redis:
    enabled: true
    replicaCount: 1
    image:
      repository: redis
      tag: "7-alpine"
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: "256Mi"
        cpu: "100m"
      requests:
        memory: "128Mi"
        cpu: "50m"
  grafana:
    enabled: true
    replicaCount: 1
    image:
      repository: grafana/grafana
      tag: "latest"
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: "512Mi"
        cpu: "200m"
      requests:
        memory: "256Mi"
        cpu: "50m"
  prometheus:
    enabled: true
    replicaCount: 1
    image:
      repository: prom/prometheus
      tag: "latest"
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: "512Mi"
        cpu: "200m"
      requests:
        memory: "256Mi"
        cpu: "50m"

# Centralized Persistence Configuration
persistence:
  n8n:
    enabled: true
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ""
  mysql:
    enabled: true
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ""
  postgresql:
    enabled: true
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ""
  redis:
    enabled: true
    accessMode: ReadWriteOnce
    size: 2Gi
    storageClass: ""
  grafana:
    enabled: true
    accessMode: ReadWriteOnce
    size: 2Gi
    storageClass: ""
  prometheus:
    enabled: true
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ""

# Centralized Services Configuration
services:
  n8n:
    enabled: true
    type: ClusterIP
    port: 5678
    targetPort: http
  mysql:
    enabled: true
    type: ClusterIP
    port: 3306
    targetPort: mysql
  postgresql:
    enabled: true
    type: ClusterIP
    port: 5432
    targetPort: postgres
  redis:
    enabled: true
    type: ClusterIP
    port: 6379
    targetPort: redis
  grafana:
    enabled: true
    type: ClusterIP
    port: 3000
    targetPort: http
  prometheus:
    enabled: true
    type: ClusterIP
    port: 9090
    targetPort: http

nodeSelector: {}
tolerations: []
affinity: {} 