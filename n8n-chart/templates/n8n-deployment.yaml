apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}-n8n
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: n8n
spec:
  replicas: {{ .Values.n8n.replicaCount }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: n8n
  template:
    metadata:
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: n8n
    spec:
      containers:
        - name: n8n
          image: "{{ .Values.n8n.image.repository }}:{{ .Values.n8n.image.tag }}"
          imagePullPolicy: {{ .Values.n8n.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5678
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.global.timezone | quote }}
            - name: GENERIC_TIMEZONE
              value: {{ .Values.global.timezone | quote }}
            - name: N8N_BASIC_AUTH_ACTIVE
              value: {{ .Values.n8n.auth.enabled | quote }}
            - name: N8N_BASIC_AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.fullname" . }}-secret
                  key: n8n-auth-username
            - name: N8N_BASIC_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.fullname" . }}-secret
                  key: n8n-auth-password
            - name: WEBHOOK_URL
              value: {{ .Values.n8n.config.webhookUrl | quote }}
            - name: N8N_EDITOR_BASE_URL
              value: {{ .Values.n8n.config.editorBaseUrl | quote }}
            - name: N8N_PROTOCOL
              value: {{ .Values.n8n.config.protocol | quote }}
            - name: N8N_HOST
              value: {{ .Values.n8n.config.domain | quote }}
          resources:
            {{- toYaml .Values.n8n.resources | nindent 12 }}
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
      volumes:
        - name: n8n-data
          {{- if .Values.n8n.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-n8n-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
  {{- if .Values.n8n.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "n8n.fullname" . }}-n8n-pvc
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: n8n
spec:
  accessModes:
    - {{ .Values.n8n.persistence.accessMode }}
  {{- if .Values.n8n.persistence.storageClass }}
  storageClassName: {{ .Values.n8n.persistence.storageClass | quote }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.n8n.persistence.size }}
  {{- end }}