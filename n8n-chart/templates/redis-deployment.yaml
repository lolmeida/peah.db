{{- if .Values.redis.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}-redis
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: {{ .Values.redis.replicaCount }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.global.timezone | quote }}
          command:
            - redis-server
            - --requirepass
            - $(REDIS_PASSWORD)
            - --appendonly
            - "yes"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "n8n.fullname" . }}-secret
                  key: redis-password
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: redis-data
          {{- if .Values.redis.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-redis-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
  {{- if .Values.redis.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "n8n.fullname" . }}-redis-pvc
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  accessModes:
    - {{ .Values.redis.persistence.accessMode }}
  {{- if .Values.redis.persistence.storageClass }}
  storageClassName: {{ .Values.redis.persistence.storageClass | quote }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.redis.persistence.size }}
  {{- end }}
{{- end }}