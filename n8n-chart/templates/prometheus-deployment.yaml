{{- if .Values.monitoring.prometheus.enabled -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "n8n.fullname" . }}-prometheus-config
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'n8n'
        static_configs:
          - targets: ['{{ include "n8n.fullname" . }}-n8n:{{ .Values.n8n.service.port }}']
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'redis'
        static_configs:
          - targets: ['{{ include "n8n.fullname" . }}-redis:{{ .Values.redis.service.port }}']
        scrape_interval: 30s
      
      - job_name: 'postgres'
        static_configs:
          - targets: ['{{ include "n8n.fullname" . }}-postgres:{{ .Values.postgresql.service.port }}']
        scrape_interval: 30s
      
      - job_name: 'mysql'
        static_configs:
          - targets: ['{{ include "n8n.fullname" . }}-mysql:{{ .Values.mysql.service.port }}']
        scrape_interval: 30s
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}-prometheus
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: prometheus
  template:
    metadata:
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: prometheus
    spec:
      serviceAccountName: {{ include "n8n.fullname" . }}-prometheus
      containers:
        - name: prometheus
          image: "{{ .Values.monitoring.prometheus.image.repository }}:{{ .Values.monitoring.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.monitoring.prometheus.image.pullPolicy }}
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/prometheus/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            - --storage.tsdb.retention.time={{ .Values.monitoring.prometheus.retention }}
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.global.timezone | quote }}
          resources:
            {{- toYaml .Values.monitoring.prometheus.resources | nindent 12 }}
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus/
              readOnly: true
            - name: prometheus-data
              mountPath: /prometheus/data
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
      volumes:
        - name: prometheus-config
          configMap:
            name: {{ include "n8n.fullname" . }}-prometheus-config
        - name: prometheus-data
          {{- if .Values.monitoring.prometheus.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "n8n.fullname" . }}-prometheus-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "n8n.fullname" . }}-prometheus
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "n8n.fullname" . }}-prometheus
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "n8n.fullname" . }}-prometheus
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "n8n.fullname" . }}-prometheus
subjects:
  - kind: ServiceAccount
    name: {{ include "n8n.fullname" . }}-prometheus
    namespace: {{ .Release.Namespace }}
---
{{- if .Values.monitoring.prometheus.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "n8n.fullname" . }}-prometheus-pvc
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
    app.kubernetes.io/component: prometheus
spec:
  accessModes:
    - {{ .Values.monitoring.prometheus.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.monitoring.prometheus.persistence.size }}
  {{- if .Values.monitoring.prometheus.persistence.storageClass }}
  {{- if (eq "-" .Values.monitoring.prometheus.persistence.storageClass) }}
  storageClassName: ""
  {{- else }}
  storageClassName: {{ .Values.monitoring.prometheus.persistence.storageClass | quote }}
  {{- end }}
  {{- end }}
{{- end }}
{{- end }} 