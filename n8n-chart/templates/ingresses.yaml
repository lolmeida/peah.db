{{- $ingressConfigs := fromYaml (include "n8n.ingressConfigs" .) -}}
{{- $isFirst := true -}}
{{- range $key, $ingress := $ingressConfigs }}
{{- if $ingress.enabled }}
{{- if not $isFirst }}
---
{{- end }}
{{- $isFirst = false }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "n8n.fullname" $ }}-{{ $ingress.name }}
  labels:
    {{- include "n8n.labels" $ | nindent 4 }}
    {{- if $ingress.component }}
    app.kubernetes.io/component: {{ $ingress.component }}
    {{- end }}
  {{- with $ingress.config.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if $ingress.config.className }}
  ingressClassName: {{ $ingress.config.className }}
  {{- end }}
  {{- if $ingress.config.tls }}
  tls:
    {{- range $ingress.config.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range $ingress.config.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if .pathType }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              service:
                {{- if .service }}
                name: {{ include "n8n.fullname" $ }}-{{ .service }}
                port:
                  number: {{ index $.Values.services .service "port" }}
                {{- else }}
                name: {{ include "n8n.fullname" $ }}-{{ $ingress.serviceName }}
                port:
                  number: {{ index $.Values.services $ingress.serviceName "port" }}
                {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
{{- end }}